(dp1
S'output'
p2
S"<type 'exceptions.KeyError'> 'comment'"
p3
sS'layer'
p4
S'/home/avinash/Downloads/web2py/applications/Golf/controllers/default.py'
p5
sS'code'
p6
S'# -*- coding: utf-8 -*- \n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef index():\n    """\n    example action using the internationalization operator T and flash\n    rendered by views/default/index.html or views/generic.html\n    """\n    response.flash = T(\'You are successfully running web2py.\')\n    return dict(message=T(\'Hello World\'))\n    \ndef settings():\n    form = SQLFORM(db.comment)\n    if form.process().accepted:\n        response.flash = \'settings saved successfully\'\n    return dict(form=form)    \n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login \n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    session.forget()\n    return service()\n\nresponse._vars=response._caller(settings)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/avinash/Downloads/web2py/gluon/restricted.py", line 205, in restricted\n    exec ccode in environment\n  File "/home/avinash/Downloads/web2py/applications/Golf/controllers/default.py", line 61, in <module>\n  File "/home/avinash/Downloads/web2py/gluon/globals.py", line 173, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/avinash/Downloads/web2py/applications/Golf/controllers/default.py", line 21, in settings\n    form = SQLFORM(db.comment)\n  File "/home/avinash/Downloads/web2py/gluon/dal.py", line 6343, in __getattr__\n    return self[key]\n  File "/home/avinash/Downloads/web2py/gluon/dal.py", line 6337, in __getitem__\n    return dict.__getitem__(self, str(key))\nKeyError: \'comment\'\n'
p11
s.